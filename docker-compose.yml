version: '3.8'

services:
  webapi-rabbit-mq:
    image: rabbitmq
    container_name: ocrd-rabbitmq
    # hostname: rabbit-mq-host
    build:
      context: ./ocrd_webapi/rabbitmq
      dockerfile: ./Dockerfile-RabbitMQ
    environment:
      - 'OCRD_WEBAPI_RABBIT_MQ_HOST=${OCRD_WEBAPI_RABBIT_MQ_HOST}'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/etc/:/var/etc/rabbitmq/
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq/
    networks:
      - ocrd-webapi
    healthcheck:
      test: [ "CMD", "nc", "-z", "0.0.0.0", "5672" ]
      interval: 120s
      timeout: 30s
      retries: 5

  webapi:
    build: .
    container_name: ocrd-webapi
    environment:
      - 'OCRD_WEBAPI_SERVER_PATH=${OCRD_WEBAPI_SERVER_PATH}'
      - 'OCRD_WEBAPI_STORAGE_DIR=${OCRD_WEBAPI_STORAGE_DIR}'
      - 'OCRD_WEBAPI_DB_URL=${OCRD_WEBAPI_DB_URL}'
      - 'OCRD_WEBAPI_USERNAME=${OCRD_WEBAPI_USERNAME}'
      - 'OCRD_WEBAPI_PASSWORD=${OCRD_WEBAPI_PASSWORD}'
    ports:
      - "${OCRD_WEBAPI_PORT}:8000"
    networks:
      - ocrd-webapi
    volumes:
      - "${OCRD_WEBAPI_DATADIR_HOST}/webapi-data:${OCRD_WEBAPI_STORAGE_DIR}"

  mongo:
    image: "mongo"
    container_name: ocrd-mongodb
    ports:
      - "${OCRD_WEBAPI_MONGO_PORT}:27017"
    networks:
      - ocrd-webapi
    volumes:
      - "${OCRD_WEBAPI_DATADIR_HOST}/mongo-data:/data/db"

networks:
  ocrd-webapi:
    name: ocrd-webapi
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
